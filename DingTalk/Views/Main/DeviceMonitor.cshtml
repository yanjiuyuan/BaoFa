@{
    Layout = null;
}

<!--右侧实体内容-->
<el-main id="partPage">
    <div v-show="showMask">
        <div class="mask"></div>
    </div>
    <h3>宝发硫化鞋生产线01</h3>
    <div @*v-loading="loading"
                 element-loading-text="数据加载中"
                 element-loading-spinner="el-icon-loading"*@
         element-loading-background="rgba(0, 0, 0, 0.8)"
         id="imgFrame" style="margin-bottom:30px;position:relative;">
        <img src="~/Content/images/deviceMonitor.png" style="max-width:100%" />
        <!--生产数量统计-->
        <el-button plain type="danger" class="device-count" style="top:1%;left:0.56%;">当班产量</el-button>
        <el-button type="danger" class="device-count" style="top:1%;left:8.56%;font-weight:bold;">{{useage.NowN}}</el-button>
        <el-button plain type="danger" class="device-count" style="top:8%;left:0.56%;">总产量</el-button>
        <el-button type="danger" class="device-count" style="top:8%;left:8.56%;font-weight:bold;">{{useage.AllN}}</el-button>
        <el-button plain type="danger" class="device-count" style="top:15%;left:0.56%;">生产节拍</el-button>
        <el-button type="danger" class="device-count" style="top:15%;left:8.56%;font-weight:bold;">{{useage.ProductionBeat}}</el-button>
        <el-button plain type="danger" class="device-count" style="top:78%;left:45%;">总订单号</el-button>
        <el-button type="danger" class="device-count" style="top:78%;left:53%;font-weight:bold;">{{useage.OrderID}}</el-button>
        <el-button plain type="danger" class="device-count" style="top:85%;left:45%;">子订单号</el-button>
        <el-button type="danger" class="device-count" style="top:85%;left:53%;font-weight:bold;">{{useage.ChildID}}</el-button>
        <el-button plain type="danger" class="device-count" style="top:92%;left:45%;">运行状态</el-button>
        <el-button type="danger" class="device-count" style="top:92%;left:53%;font-weight:bold;">{{useage.Linestatus}}</el-button>
        <!--设备状态按钮-->
        <template v-for="(btn,index) of deviceBtns">
            <sam-devicebtn :param="btn" :index="index"></sam-devicebtn>
        </template>
        <i v-if="showMask" class="el-icon-error" v-on:click="restoreScreen" style="position:absolute;right:40px;bottom:20px;font-size:40px;"></i>
        <i v-else class="el-icon-rank" v-on:click="changeFullScreen" style="position:absolute;right:40px;bottom:20px;font-size:40px;"></i>
    </div>
    <el-button v-on:click="createReport" type="primary">生成日报表</el-button>
</el-main>

<script>
    //vue组件-设备按钮显示
    Vue.component('sam-devicebtn', {
        props: ['param', 'index'],
        template: '<el-tooltip :placement="param.tooltip.placement" :disabled="param.tooltip.disabled" effect="light" class="tips">'+
                        '<div slot="content" :style="{fontSize:param.tooltip.font_size}">' +
                            '<template v-for="t in param.tips">' +
                                '{{t}} : {{param.tips[t]}}' +
                                '<br />' +
                            '</template>' +
                        '</div>' +
                         '<div v-on:mouseover="showMore=true" v-on:mouseout="showMore=false" v-on:click="showDetail(param.num)"' +
                        'class="device-button" :class="theme.mainClass"' +
                        ':style="{left:param.position.left,top:param.position.top}">' +
                        '<span>{{param.name}}</span>' +
                        '<el-button :type="theme.warnType" round class="device-status">{{theme.text}}</el-button>' +
                            '<el-collapse-transition>' +
                                '<div v-show="showMore">' +
                                '<hr :style="{color:theme.color}" />' +
                                    '<template v-for="(d,i) in param.detail">' +
                                    '{{i}} : {{d}}' +
                                    '<br />' +
                                    '</template>' +
                                '</div>' +
                            '</el-collapse-transition>' +
                        '</div>' +
                    '</el-tooltip>',
        data: function () {
            return {
                showMore: false
            }
        },
        methods: {
            //显示胶站详细信息页面
            showDetail: function (id) {
                //console.log(id)
                loadPage('/Main/DeviceDetail')
            }
        },
        computed: {
            theme: function () {
                var theme
                switch (this.param.status) {
                    case 0: theme = {
                        mainClass: 'device-button-info',
                        warnType: 'info',
                        text: '空闲',
                        color: '#909399'
                    }; break;
                    case 2: theme = {
                        mainClass: 'device-button-warning',
                        warnType: 'warning',
                        text: '警告',
                        color: '#E6A23C'
                    }; break;
                    case 3: theme = {
                        mainClass: 'device-button-danger',
                        warnType: 'danger',
                        text: '危险',
                        color: '#F56C6C'
                    }; break;
                    default: theme = {
                        mainClass: 'device-button-success',
                        warnType: 'success',
                        text: '正常',
                        color: '#67C23A'
                    };
                }
                return theme
            }
        }
    })
    var img = $("#imgFrame img").find("img")[0]
    var deviceButtoCss = {}
    var deviceStatusCss = {}
    var imgWidth = 900
    var imgHeight = 430
    new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                activeNames: ['1'],
                deviceBtns: _cloneArr(DEVICES),
                showMask: false,
                loading: true,
                useage:{}
            }
        },
        methods: {
            //监控界面全屏
            changeFullScreen: function () {
                var frameWidth = screenWidth
                //screenWidth / screenHeight > 900 / 430 ? $("#imgFrame").css({ "height": screenHeight }) : $("#imgFrame").css({ "width": screenWidth })
                if (screenWidth < 1400) frameWidth = screenWidth -90
                $("#imgFrame").css({ "width": frameWidth })
                $("#imgFrame").css({ "position": "fixed", "top": "0", "left": "0" })
                imgWidth = parseInt($("#imgFrame").css("width"))
                imgHeight = parseInt($("#imgFrame").css("height"))
                console.log("imgWidth,imgHeight = " + imgWidth + " , " + imgHeight)
                this.showMask = true;
                $("body").css({ "overflow": "hidden" })
                for (var p = 0; p < DEVICES.length;p++) {
                    DEVICES[p].tooltip.font_size = "1.2em"
                }
                $(".device-button").css("font-size", "1.4em")
                $(".device-count").css("font-size", "1.4em")
            },
            //监控界面恢复
            restoreScreen: function () {
                $("#imgFrame").css({ "width": '100%', "height": 'auto', "position": "relative", "top": "0", "left": "0" })
                $("#imgFrame").find("img").css({ "width": '100%'})
                $("body").css({ "overflow": "scroll" })
                for (var p = 0; p < DEVICES.length; p++) {
                    DEVICES[p].tooltip.font_size = "1em"
                }
                $(".device-button").css("font-size", "1em")
                $(".device-count").css("font-size", "1em")
                for (var css in deviceStatusCss) {
                    css == "padding" ? $(".device-status").css("cssText", css + ":" + deviceStatusCss[css] + 'px !important;') : $(".device-status").css(css, deviceStatusCss[css] + 'px')
                }
                this.showMask = false;
            },
            //获取实时数量参数
            getUseage: function () {
                var that = this
                $.ajax({
                    url: "usage/getusage",
                    success: function (data) {
                        data = JSON.parse(data).Rows[0]
                        that.useage = data
                        setLocalObj('lineData',data)
                    }
                })
            },
            createReport: function () {
                window.open("Reports/GetDailyReport");   
            }
        },
        created: function () {
            var that = this;
            //webSocket 获取数据
            ws.onmessage = function (result) {
                that.loading = false
                var devData = JSON.parse(JSON.parse(result.data))
                that.deviceBtns = _cloneArr(DEVICES)
                console.log(devData)
                for (let i = 0; i < that.deviceBtns.length;i++) {
                    var dev = that.deviceBtns[i]
                    if (!dev.detail) continue
                    for (let d in devData) {
                        var dObj = devData[d][0]
                        if (dObj.SprayID != dev.SprayID || dObj.SprayID == null) continue
                        for (let det in dev.detail) {
                            var ele = dev.detail[det]
                            if (dObj[ele] != null) {
                                dev.detail[det] = dObj[ele]
                                //根据参数设定设备状态
                                if (DETAILRANGE[ele] && (dObj[ele] < DETAILRANGE[ele].min || dObj[ele] > DETAILRANGE[ele].max)) {
                                    dev.status = 3
                                    dev.tooltip.disabled = false
                                    dev.tips[det] = det+":"+dObj[ele]
                                }
                                if (dev.status != 3) dev.status = 1
                            }
                            else {
                                delete dev.detail[det]
                            }
                        }
                    }
                }
            };
            ws.onerror = function (error) {
              console.log(error);
            };
            ws.onclose = function (error) {
                console.log(error);
            };
            //获取useage参数
            window.setInterval(function () {
                that.getUseage()
            },5000)
            this.getUseage()
            loadHtml("mainPage", "partPage")
        }
    })
</script>



