@{
    Layout = null;
}

<!--右侧实体内容-->
<script src="~/Scripts/echarts-all.js"></script>
<el-main id="partPage" style="height:500px;">
    <!--查詢表單-->
    <el-form :inline="false" :model="formInline" ref="formInline" :rules="rules" class="demo-form-inline"
             size="medium">
        <el-form-item label="二维码号" prop="qrCode">
            <el-input v-model="formInline.qrCode" style="width:200px;"
                      placeholder="请输入鞋子二维码"></el-input>
            <el-button type="primary" v-on:click="search('formInline')">搜索</el-button>
        </el-form-item>
        <el-form-item label="工位" prop="stationId">
   
            <el-checkbox :indeterminate="isIndeterminate" v-model="checkAll" v-on:change="handleCheckAllChange"
                         style="float:left;">全选</el-checkbox>
            <el-checkbox-group v-model="formInline.stationId" v-on:change="handleCheckedCitiesChange" style="float:left;margin-left:15px;">
                <el-checkbox v-for="s in stations" :label="s.Key" :key="s.Key">{{s.Value}}</el-checkbox>
            </el-checkbox-group>
        </el-form-item>
    </el-form>

    <div id="lineChart1" style="height:200px;width:50%;float:left;"></div>
    <div id="lineChart2" style="height:200px;width:50%;float:left;"></div>
    <div id="lineChart3" style="height:200px;width:50%;float:left;"></div>
    <div id="lineChart4" style="height:200px;width:50%;float:left;"></div>
    <div id="lineChart5" style="height:200px;width:50%;float:left;"></div>
    <div id="lineChart6" style="height:200px;width:50%;float:left;"></div>
    <div id="lineChart7" style="height:200px;width:50%;float:left;"></div>

</el-main>

<script>
    var paramOption = []
    var lineChart1, lineOption1, lineChart2, lineOption2, lineChart3, lineOption3, lineChart4, lineOption4, lineChart5, lineOption5, lineChart6, lineOption6, lineChart7, lineOption7
    var lineElement1, lineElement2, lineElement3, lineElement4, lineElement5, lineElement6, lineElement7
    var lineElements = [], lineCharts = [], lineOptions = []
    var usageOption = {}
    var demo = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                formInline: {
                    qrCode: '',
                    stationId: ["1", "2"]
                },
                stations: [],
                checkAll: false,
                isIndeterminate: true
            }
        },
        methods: {
            search: function (formName) {
                var that = this
                this.$refs[formName].validate((valid) => {
                    if(!valid) return
                    that.getData()
                    //intervalId = window.setInterval(function () {
                    //    that.getData()
                    //}, 50000)
                })
            },
            //获取单品质量分析工位列表
            getStations: function () {
                var that = this
                $.ajax({
                    url: '/SingleQuality/GetSingleQualityStation',
                    success: function (data) {
                        data = JSON.parse(data)
                        console.log('获取单品质量分析工位列表')
                        console.log(data)
                        that.stations = data
                    }
                })
            },
            //查询单品单工位实时数据
            getData: function () {
                var that = this
                hideOptions()
                for (let s of this.formInline.stationId) {
                    let index = 0
                    for (let i = 0; i < this.stations.length; i++) {
                        if (s == this.stations[i].Key) {
                            index = i
                        }
                    }
                    let param = {
                        RFID: this.formInline.qrCode,
                        Spray: s
                    }
                    this.GetSingleQuality(index, param, this.stations[index].Value)
                }
            },
            GetSingleQuality(index, param, title) {
                var url = '/SingleQuality/GetSingleQualityByRFIDandSpray' + _formatQueryStr(param)
                $.ajax({
                    url: url,
                    success: function (data) {
                        var xArr = [], y1Arr = [], y2Arr = [], y3Arr = [], y4Arr = [], y5Arr = [], y6Arr = [], y7Arr = []
                        data = JSON.parse(data)
                        console.log('查询单品单工位实时数据')
                        console.log(url)
                        console.log(data)
                        if (data.length && data.length > 2) {
                            if (param.Spray == '7') {

                                for (var d in data) {
                                    xArr.push(data[d][ 'LineUsageID'])
                                    y1Arr.push(data[d].BOilPressure)
                                    y2Arr.push(data[d].LOilPressure)
                                    y3Arr.push(data[d].ROilPressure)
                                    y4Arr.push(data[d].ShoeL)
                                }
                            }
                            else {
                                for (var d in data) {
                                    xArr.push(data[d][ 'ID'])
                                    y1Arr.push(data[d].AtomizationPressure)
                                    y2Arr.push(data[d].MaterialPressure)
                                    y3Arr.push(data[d].GlueWeight)
                                    y4Arr.push(data[d].FlowMeter)
                                    y5Arr.push(data[d].OvenTemperatureNow)
                                    y6Arr.push(data[d].StateN)
                                    y7Arr.push(data[d].ErrorN / 1000)
                                }
                            }
                        } else {
                            xArr = [0], y1Arr = [0], y2Arr = [0], y3Arr = [0], y4Arr = [0], y5Arr = [0], y6Arr = [0], y7Arr = [0]
                        }
                        if (param.Spray == '7') {
                            lineOptions[index].xAxis[0].data = xArr
                            lineOptions[index].series[0].data = y1Arr
                            lineOptions[index].series[1].data = y2Arr
                            lineOptions[index].series[2].data = y3Arr
                            lineOptions[index].series[3].data = y4Arr
                            console.log('LineUsage!!!!!!!!!!!!!!!!!!!!!!!!')
                            console.log(index)
                            console.log(lineOptions[index])
                        } else {
                            lineOptions[index].xAxis[0].data = xArr
                            lineOptions[index].series[0].data = y1Arr
                            lineOptions[index].series[1].data = y2Arr
                            lineOptions[index].series[2].data = y3Arr
                            lineOptions[index].series[3].data = y4Arr
                            lineOptions[index].series[4].data = y5Arr
                            lineOptions[index].series[5].data = y6Arr
                            lineOptions[index].series[6].data = y7Arr
                        }
                        lineOptions[index].title.text = title
                        lineCharts[index].setOption(lineOptions[index],true)
                        $('#lineChart' + (index + 1)).show()
                        console.log(lineOptions[index])
                        console.log(lineCharts[index])
                    }
                })
            },
            //多选控件方法
            handleCheckAllChange(val) {
                if (this.formInline.stationId.length < this.stations.length) {
                    this.formInline.stationId = []
                    for (let s of this.stations) {
                        this.formInline.stationId.push(s.Key)
                    }
                } else {
                    this.formInline.stationId = []
                }
            },
            handleCheckedCitiesChange(value) {
                let checkedCount = value.length;
                this.checkAll = checkedCount === this.stations.length;
                this.isIndeterminate = checkedCount > 0 && checkedCount < this.stations.length;
            }
        },
        created: function () {
            this.getStations()
            loadHtml("mainPage", "partPage")
            $('.footer').hide()
        },
        beforeDestroy: function () {
            $('.footer').show()
        },
        destroyed: function () {
            $('.footer').show()
        }
    })
    var realTimeData = {
        name: '信息实时数据表',
        params: ['雾化压力', '物料压力', '胶重', '流量计', '烤箱实时温度', '机器人状态号', '机器人报警号'],
        time: ['8:00'],
        dada: {

        }
    }
    lineOption = {
        title: {
            text: realTimeData.name,
            backgroundColor: 'white',
            x: 'center'
        },
        legend: {
            data: [],
            backgroundColor: 'white',
            orient: 'vertical',
            x: 'left'
        },
        calculable: true,
        toolbox: {
            show: true,
            x: 'right',
            backgroundColor: 'white',
            feature: {
                dataView: { show: true, readOnly: false },
                magicType: { show: true, type: ['line', 'bar', 'stack', 'tiled'] },
                restore: { show: true },
                backgroundColor: 'white',
                saveAsImage: { show: true }
            }
        },
        xAxis: [
            {
                type: 'category',
                boundaryGap: false,
                name: '小时：分钟',
                backgroundColor: 'white',
                data: realTimeData.time
            }
        ],
        yAxis: [
            {
                type: 'value',
                backgroundColor: 'white',
                axisLabel: {
                    formatter: '{value}'
                }
            }
        ],
        grid: {
            x: '24%',
            containLabel: true,
            backgroundColor: 'white',
        },
        backgroundColor:'white',
        series: [
            
        ]
    };
    for (let i = 0; i < 7; i++) {
        let element = document.getElementById('lineChart' + (i + 1))
        //let id = '#lineChart' + (i + 1)
        //let element = $(id)
        lineElements.push(element)
        lineCharts.push(echarts.init(element))
        let tempOption = jQuery.extend(true, {}, lineOption)
        let tempSeries = []
        tempOption.legend.data = realTimeData.params
        for (let p of realTimeData.params) {
            tempSeries.push({
                name: p,
                type: 'line',
                data: [1]
            })
        }
        tempOption.series = tempSeries
        lineOptions.push(tempOption)
        lineCharts[i].setOption(lineOptions[i],true)
    }
    //usageOption = _cloneObj(lineOption)
    usageOption = jQuery.extend(true, {}, lineOption)
    var paramArr = ['压底#总油压', '左十字压', '右十字压', '鞋长']
    var seriesArr = []
    console.log('usageOption')
    console.log(usageOption)
    usageOption.legend.data = []
    usageOption.legend.data = paramArr
    for (let p of paramArr) {
        seriesArr.push({
            name: p,
            type: 'line',
            data: []
        })
    }
    usageOption.series = seriesArr
    lineOptions[6] = usageOption

    console.log(11111)
    console.log(lineOptions)
    hideOptions()
    //lineChart.setOption(lineOption);

    function hideOptions() {
        for (let i = 0; i < 7; i++) {
            $('#lineChart' + (i + 1)).hide()
        }
    }
</script>



