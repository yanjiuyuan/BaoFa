@{
    Layout = null;
}

<!--右侧实体内容-->
<script src="~/Scripts/echarts-all.js"></script>
<el-main id="partPage">
 
    <el-collapse v-model="activeNames">
        <el-collapse-item :title="lineData[0].ProductLineName" name="1">
            <div class="block">
                <span class="demonstration">日期选择</span>
                <el-date-picker v-model="date"
                                type="date"
                                value-format="yyyy-MM-dd"
                                placeholder="选择日期">
                </el-date-picker>
                <el-button type="primary" v-on:click="onFilter">搜索</el-button>
            </div>
            <div id="lineChart" style="height:300px;"></div>
            <div id="areaChart" style="height:300px;"></div>
            <div id="barChart" style="height:300px;"></div>
            <img id="hideImg" src="" />
        </el-collapse-item>
        <el-collapse-item :title="lineData[1].ProductLineName" name="2">
            <div>暂无数据</div>
        </el-collapse-item>
    </el-collapse>
</el-main>


<script>
    var lineChart, areaChart, barChart, lineOption, areaOption, barOption
    var barTableConfig = {
        BiaoQianConsumption: "标签用量",
        DaDiConsumption: "大底用量",
        HuChiConsumption: "护齿用量",
        WeiTiaoConsumption: "围条用量"
    }
    var demo = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                lineData: getLocalObj("lineData"),
                activeNames: ['1'],
                date:'',
                imgSrc: ""
            }
        },
        methods: {
            onFilter: function () {
                var lineData = getLocalObj("lineData")
                console.log(lineData)
                var date = new Date()
                var dateStr = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()
                if (this.date) dateStr = this.date
                console.log(dateStr)
                window.clearInterval(intervalId)
                intervalId = window.setInterval(function () {
                    getLineData({ DataTime: dateStr, Count: 100 })
                    getAreaData({ DataTime: dateStr, dura: 10 })
                    getBarData({ DataTime: dateStr, lineid: lineData[0].ProductLineId })
                }, 5000)
                getLineData({ DataTime: dateStr, Count: 100 })
                getAreaData({ DataTime: dateStr, dura: 10 })
                getBarData({ DataTime: dateStr, lineid: lineData[0].ProductLineId })
            }
        },
        created: function () {
            var that = this
            loadHtml("mainPage", "partPage")
            this.onFilter()
        }
    })
    //折线图
    lineChart = echarts.init(document.getElementById('lineChart'));
    lineOption = {
        title: {
            text: '产量统计图',
            x: 'center'
        },
        legend: {
            data: ['当班产量', '预加工量'],
            x: 'left'
        },
        tooltip: {
            trigger: 'axis'
        },
        toolbox: {
            show: true,
            feature: {
                mark: { show: true },
                dataView: { show: true, readOnly: false },
                magicType: {
                    show: true,
                    type: ['line', 'bar']
                },
                restore: { show: true },
                saveAsImage: { show: true }
            }
        },
        calculable: true,
        xAxis: [
            {
                type: 'category',
                boundaryGap: false,
                name: '小时：分钟',
                data: ['0']
            }
        ],
        yAxis: [
            {
                type: 'value',
                axisLabel: {
                    formatter: '{value} 只'
                }
            }
        ],
        series: [
            {
                name: '当班产量',
                type: 'line',
                data: [0],
                markPoint: {
                    data: [
                        { type: 'max', name: '当班产量' }
                    ]
                },
            },
            {
                name: '预加工量',
                type: 'line',
                data: [0],
                markPoint: {
                    data: [
                        { type: 'max', name: '预加工量' }
                    ]
                },
            }
        ]
    };
    lineChart.setOption(lineOption);

    //面积图
    areaChart = echarts.init(document.getElementById('areaChart'));
    areaOption = {
        title: {
            text: '效率统计图',
            x: 'center'
        },
        tooltip: {
            trigger: 'axis'
        },
        legend: {
            data: ['硫化鞋'],
            x: 'left'
        },
        toolbox: {
            show: true,
            feature: {
                mark: { show: true },
                dataView: { show: true, readOnly: false },
                magicType: { show: true, type: ['line', 'bar', 'stack', 'tiled'] },
                restore: { show: true },
                saveAsImage: { show: true }
            }
        },
        calculable: true,
        xAxis: [
            {
                type: 'category',
                boundaryGap: false,
                name: '小时：分钟',
                data: ['']
            }
        ],
        yAxis: [
            {
                type: 'value',
                axisLabel: {
                    formatter: '{value} 只/小时'
                }
            }
        ],
        series: [
            {
                name: '硫化鞋',
                type: 'line',
                smooth: true,
                itemStyle: { normal: { areaStyle: { type: 'default' } } },
                data: [0]
            }
        ]
    }
    areaChart.setOption(areaOption)
    //柱状图
    barChart = echarts.init(document.getElementById('barChart'));
    barOption = {
        title: {
            text: '用料统计图',
            x: 'center'
        },
        toolbox: {
            show: true,
            feature: {
                mark: { show: true },
                dataView: { show: true, readOnly: false },
                restore: { show: true },
                saveAsImage: { show: true }
            }
        },
        calculable: true,
        grid: {
            borderWidth: 0,
            y: 80,
            y2: 60
        },
        xAxis: [
            {
                type: 'category',
                show: false,
                data: ['围条用量', '护齿用量', '标签用量', '大底用量']
            }
        ],
        yAxis: [
            {
                type: 'value',
                show: false
            }
        ],
        series: [
            {
                name: '用料统计',
                type: 'bar',
                itemStyle: {
                    normal: {
                        color: function (params) {
                            // build a color map as your need.
                            var colorList = [
                                '#C1232B', '#B5C334', '#FCCE10', '#E87C25', '#27727B',
                                '#FE8463', '#9BCA63', '#FAD860', '#F3A43B', '#60C0DD',
                                '#D7504B', '#C6E579', '#F4E001', '#F0805A', '#26C0C0'
                            ];
                            return colorList[params.dataIndex]
                        },
                        label: {
                            show: true,
                            position: 'top',
                            formatter: '{b}\n{c}'
                        }
                    }
                },
                data: [0, 0, 0, 0]
            }
        ]
    };
    barChart.setOption(barOption);
    //获取产量图数据
    function getLineData(param) {
        $.ajax({
            url: "/Statistics/GetCurrentProduction" + _formatQueryStr(param),
            success: function (data) {
                var xArr = [], y1Arr = [], y2Arr = []
                console.log("获取产量图数据")
                console.log(data)
                data = JSON.parse(data).Rows
                for (let d = 0; d < data.length; d++) {
                    xArr.push(data[d].ID_RealTimeUsage)
                    y1Arr.push(parseInt(data[d].NowN))
                    y2Arr.push(parseInt(data[d].ChildN))
                }
                if (data.length == 0) {
                    for (var i = 0; i < 105; i++) {
                        xArr.push(0)
                        y1Arr.push(0)
                        y2Arr.push(0)
                    }
                }
                lineOption.xAxis[0].data = xArr
                lineOption.series[0].data = y1Arr
                lineOption.series[1].data = y2Arr
                lineChart.setOption(lineOption)
            }
        })
    }
    //获取生产速度数据
    function getAreaData(param) {
        $.ajax({
            url: "/Statistics/GetYieldFluct" + _formatQueryStr(param),
            success: function (data) {
                console.log("获取生产速度数据")
                console.log(data)
                data = JSON.parse(data).Rows
                var xArr = [], yArr = []
                for (var d in data) {
                    xArr.push(data[d].ID_RealTimeUsage)
                    yArr.push(data[d].CurrN)
                }
                if (data.length == 0) {
                    for (var i = 0; i < 40; i++) {
                        xArr.push(0)
                        yArr.push(0)
                    }
                }
                areaOption.xAxis[0].data = xArr
                areaOption.series[0].data = yArr
                areaChart.setOption(areaOption)
            }
        })
    }
    //获取用量图数据
    function getBarData(param) {
        var url = "/Statistics/GetDosageInfo" + _formatQueryStr(param)
        $.ajax({
            url: url,
            success: function (data) {
                console.log("获取用量图数据")
                console.log(url)
                console.log(data)
                data = JSON.parse(data)[0]
                var xArr = [], yArr = []
                for (var d in data) {
                    xArr.push(barTableConfig[d])
                    data[d] == null ? yArr.push(0) : yArr.push(data[d])
                }
                barOption.xAxis[0].data = xArr
                barOption.series[0].data = yArr
                barChart.setOption(barOption)
            }
        })
    }
</script>


