@{
    Layout = null;
}

<!--右侧实体内容-->
<div id="partPage">
    <el-button v-on:click="handleAdd" type="primary">添加用户</el-button>
    <!--添加表單-->
    <el-dialog title="用户编辑" :visible.sync="dialogFormVisible">
        <el-form :inline="true" :model="ruleForm" class="demo-form-inline"
                 size="medium" :rules="rules" ref="ruleForm">
            <el-form-item label="用户名(必填)" prop="userName">
                <el-input v-model="ruleForm.userName" style="width:100px;" :disabled="!isAdd"></el-input>
            </el-form-item>
            <el-form-item label="用户角色(必填)" prop="iRole">
                <el-select v-model="ruleForm.iRole" placeholder="请选择">
                    <el-option v-for="role in roleList1"
                               :key="role.roleid"
                               :label="role.rolename"
                               :value="role.roleid">
                    </el-option>
                </el-select>
            </el-form-item>
            <el-form-item label="单位名称(必填)" prop="strCompanyName">
                <el-select v-model="ruleForm.strCompanyName" placeholder="请选择" :filter="false">
                    <el-option v-for="depart in departList" :filter="false"
                               :key="depart.Value"
                               :label="depart.Value"
                               :value="depart.Value">
                    </el-option>
                </el-select>
            </el-form-item>

           
            <el-form-item label="电话号码">
                <el-input v-model="ruleForm.strphoneNumber" style="width:100px;"></el-input>
            </el-form-item>
            <el-form-item label="地址">
                <el-input v-model="ruleForm.strAddress" style="width:200px;"></el-input>
            </el-form-item>
             <el-form-item label="传真">
                <el-input v-model="ruleForm.strFax" style="width:100px;"></el-input>
            </el-form-item>
            <el-form-item label="邮箱">
                <el-input v-model="ruleForm.strEmail" style="width:100px;"></el-input>
            </el-form-item>

            <el-form-item label="状态">
                <el-switch v-model="ruleForm.status"
                           active-color="#13ce66"
                           inactive-color="#ff4949"
                           active-value="1" active-text="启用"
                           inactive-value="0" inactive-text="禁用">
                </el-switch>
            </el-form-item>
            <el-form-item v-if="isAdd">
                <el-button type="primary" v-on:click="addUser('ruleForm')" :disabled="disableAdd">添加</el-button>
            </el-form-item>
            <el-form-item v-else>
                <el-button type="primary" v-on:click="editUser('ruleForm')" :disabled="disableAdd">保存</el-button>
            </el-form-item>
        </el-form>
        <div slot="footer" class="dialog-footer">
            <el-button v-on:click="dialogFormVisible = false">取 消</el-button>
            @*<el-button type="primary" v-on:click="dialogFormVisible = false">完 成</el-button>*@
        </div>
    </el-dialog>
    <!--表格實體-->
    <el-table :data="tableData" stripe border  :height="tableheight">
        <el-table-column type="expand">
            <template slot-scope="props">
                <el-form label-position="left" inline class="table-expand">
                    <el-form-item label="电话">
                        <span>{{ props.row.phoneNumber }}</span>
                    </el-form-item>
                    <el-form-item label="地址">
                        <span>{{ props.row.address }}</span>
                    </el-form-item>
                    <el-form-item label="手机">
                        <span>{{ props.row.telephone }}</span>
                    </el-form-item>
                    <el-form-item label="邮箱">
                        <span>{{ props.row.email }}</span>
                    </el-form-item>
                </el-form>
            </template>
        </el-table-column>
       
        <el-table-column prop="userName" label="用户名"></el-table-column>
        
        <el-table-column prop="lastLoginTime" label="上次登录" width="250px"></el-table-column>
      
        <el-table-column prop="statusText" label="状态"></el-table-column>
        <el-table-column prop="roleText" label="角色"></el-table-column>
        <el-table-column prop="BrName" label="单位名称"></el-table-column>
        <el-table-column label="操作" >
            <template slot-scope="scope" v-if="scope.row.role!='01'">
                <el-button size="mini"
                            v-on:click="handleEdit(scope.$index, scope.row)">编辑</el-button>
                <el-button size="mini"
                            type="danger"
                            v-on:click="handleDelete(scope.$index, scope.row)">删除</el-button>
            </template>
        </el-table-column>
    </el-table>
    <!--底部翻頁-->
    <div style="text-align:right">
        <el-pagination v-on:size-change="handleSizeChange"
                        v-on:current-change="handleCurrentChange"
                        :current-page="currentPage"
                        :page-sizes="[10]"
                        :page-size="pageSize"
                        layout="total, sizes, prev, pager, next, jumper"
                        :total="totalRows">
        </el-pagination>
    </div>
</div>


<script>
    var lineData = getLocalObj("lineData")
    new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                lineData: lineData,
                tableheight:800,
                data: [],
                pageSize:10,
                tableData: [],
                roleList: [],
                roleList1:[],
                departList: [],
                disableAdd: false,
                showAddUser: false,
                isAdd: true,
                dialogFormVisible: false,
                ruleForm: {
                    userName: '',
                    strRealName: '',
                    strphoneNumber: '',
                    strAddress: '',
                    iRole: '',
                    strProvince: '',
                    strCity: '',
                    strTelephone: '',
                    strOtherContact: '',
                    strFax: '',
                    strEmail: '',
                    Brno: '',
                    BrName: '',
                    status: ''
                }
            }
        },
        filters: {
            filterState: function (value) {
                switch (value) {
                    case 1: return '启用'; break;
                    default:return '禁用'
                }
            }
        },
        methods: {
            //获取用户列表
            getUserList:function(obj) {
                var that = this
                var url = "/Register/GetUserList" + _formatQueryStr(obj)
                $.ajax({
                    url: url,
                    success: function (data) {
                        that.data = JSON.parse(data)
                        that.totalRows = that.data.length
                        console.log('//获取用户列表')
                        console.log(url)
                        console.log(that.data)
                        for (let d of that.data) {
                            switch (d.status) {
                                case 1:case '1': d.statusText =  '启用'; break;
                                default: d.statusText = '禁用'
                            }
                            switch (d.role) {
                                case '01': d.roleText = '管理员'; break;
                                case '02': d.roleText = '集团用户'; break;
                                case '03': d.roleText = '公司用户'; break;
                                case '04': d.roleText = '车间用户'; break;
                                default: d.roleText = ''; 
                            }
                        }
                        that.getData()
                    },
                    error: function (err) {
                        console.error(err)
                    }
                })
            },
            //获取角色列表
            getRoleList: function () {
                var that = this
                $.ajax({
                    url: "/Register/GetRoleList",
                    success: function (data) {
                        that.roleList = JSON.parse(data)
                        for (let d of that.roleList) {
                            if (d.roleid != "01")
                                that.roleList1.push(d);
                        }
                    
                        
                    },
                    error: function (err) {
                        console.error(err)
                    }
                })
            },
            //获取部门列表
            getDepartList: function () {
                var that = this
                $.ajax({
                    url: "/Register/GetDepartList",
                    success: function (data) {
                        that.departList = JSON.parse(data)
                        for (let d of that.departList) {
                            d.Value = d.Value.replace(/&nbsp;/g,'_')
                        }
                        console.log('//获取部门列表')
                        console.log(that.departList)
                    },
                    error: function (err) {
                        console.error(err)
                    }
                })
            },
            //添加用户
            addUser: function (formName) {
                this.isAdd = true
                var that = this
                this.$refs[formName].validate((valid) => {
                    if (valid ) {
                        that.disableAdd = true
                        for (let d of that.departList) {
                            if (d.Value == that.ruleForm.BrName) that.ruleForm.Brno = d.Key
                        }
                        that.ruleForm.BrName = that.ruleForm.BrName.replace(/-/g,'')
                        var url = '/Register/CheckRegister' + _formatQueryStr(that.ruleForm)
                        console.log("添加用户")
                        console.log(url)
                        console.log(that.ruleForm)
                        $.ajax({
                            url: url,
                            success: function (data) {
                                console.log("添加用户ok")
                                console.log(data)
                                alert(JSON.parse(data).Msg)
                                that.disableAdd = false
                                that.dialogFormVisible = false
                                that.getUserList()
                            }
                        })
                    } else {
                        console.log('添加用户失败')
                        that.disableAdd = false
                        return false;
                    }
                });
            },
            //编辑用户
            editUser: function (formName) {
                this.isAdd = false
                var that = this
                this.$refs[formName].validate((valid) => {
                    if (valid) {
                        that.disableAdd = true
                        that.ruleForm.strCompanyName = that.ruleForm.strCompanyName.replace(/-/g, '')
                        //var url = '/Register/CheckRegister' + _formatQueryStr(that.ruleForm)
                        var url = '/Register/UserModify' + _formatQueryStr(that.ruleForm)
                        console.log("编辑用户")
                        console.log(url)
                        $.ajax({
                            url: url,
                            success: function (data) {
                                console.log("编辑用户ok")
                                console.log(data)
                                alert(JSON.parse(data).Msg)
                                that.disableAdd = false
                                that.dialogFormVisible = false
                                that.getUserList()
                            }
                        })
                    } else {
                        console.log('添加用户失败')
                        that.disableAdd = false
                        return false;
                    }
                });
            },
            //添加用户按钮事件
            handleAdd: function () {
                this.dialogFormVisible = true
                this.isAdd = true
                for (let f in this.ruleForm) {
                    if (f == 'status') this.ruleForm[f] = '1'
                    else this.ruleForm[f] = ''
                }
            },
            //表单操作
            handleEdit: function (index, row) {
                console.log(index)
                console.log(row)
                this.isAdd = false
                this.dialogFormVisible = true
                this.ruleForm.userName = row.userName
                this.ruleForm.strRealName = row.realName
                this.ruleForm.strphoneNumber = row.phoneNumber
                this.ruleForm.strAddress = row.address
                this.ruleForm.iRole = row.role
                this.ruleForm.strProvince = row.province
                this.ruleForm.strCity = row.city
                this.ruleForm.strTelephone = row.telephone
                this.ruleForm.strOtherContact = row.otherContact
                this.ruleForm.strFax = row.fax
                this.ruleForm.strEmail = row.email
                this.ruleForm.Brno = row.Brno
                this.ruleForm.BrName = row.BrName
                this.ruleForm.status = row.status + ''
            },
            handleDelete: function (index, row) {
                var that = this
                var username = row.userName
                var url = '/Register/UserDelete?username='+username  
                console.log(url)
                $.ajax({
                    url: url,
                    success: function (data) {
                        alert("删除完成")
                        console.log("删除用户完成")
                        
                        that.getUserList()
                    }
                })
            
            }
        },
        created: function () {
            this.getUserList({})
            this.getDepartList()
            this.getRoleList()
            loadHtml("mainPage", "partPage")
        },

        mounted: function () {
            this.tableHeight = window.innerHeight - this.$refs.table.$el.offsetTop - 50;
        }
    })




</script>